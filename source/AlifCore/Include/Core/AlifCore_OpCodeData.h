#pragma once

#include "OpCodeIDs.h"





enum InstructionFormat { 
    INSTR_FMT_IB = 1,
    INSTR_FMT_IBC = 2,
    INSTR_FMT_IBC00 = 3,
    INSTR_FMT_IBC000 = 4,
    INSTR_FMT_IBC00000000 = 5,
    INSTR_FMT_IX = 6,
    INSTR_FMT_IXC = 7,
    INSTR_FMT_IXC00 = 8,
    INSTR_FMT_IXC000 = 9,
};



#define HAS_ARG_FLAG (1) 
#define HAS_CONST_FLAG (2) 

#define HAS_JUMP_FLAG (8)

#define HAS_EVAL_BREAK_FLAG (64)

#define OPCODE_HAS_CONST(_op) (alifOpCodeData[_op].flags & (HAS_CONST_FLAG)) 

#define OPCODE_HAS_JUMP(_op) (alifOpCodeData[_op].flags & (HAS_JUMP_FLAG)) 

#define OPCODE_HAS_EVAL_BREAK(_op) (alifOpCodeData[_op].flags & (HAS_EVAL_BREAK_FLAG))








class OpCodeData { 
public:
    uint8_t validEntry;
    int8_t instrFormat;
    int16_t flags;
}; 


extern const OpCodeData alifOpCodeData[256];
#ifdef NEED_OPCODE_DATA
extern const OpCodeData alifOpCodeData[256] = {
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {true, InstructionFormat::INSTR_FMT_IB, HAS_ARG_FLAG | HAS_JUMP_FLAG}, // JUMB_FORWARD -79-
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {0, 0, 0},
    {true, InstructionFormat::INSTR_FMT_IB, HAS_ARG_FLAG | HAS_CONST_FLAG}, // RETURN_CONST -103-



};

#endif



extern const uint8_t alifOpCode_deOpt[256]; 
#ifdef NEED_OPCODE_DATA
const uint8_t alifOpCode_deOpt[256] = {
    /* [BEFORE_ASYNC_WITH] = */BEFORE_ASYNC_WITH,
    /* [BEFORE_WITH] = */BEFORE_WITH,
    /* [BINARY_OP] = */BINARY_OP,
    /* [BINARY_OP_ADD_FLOAT] = */BINARY_OP,
    /* [BINARY_OP_ADD_INT] = */BINARY_OP,
    /* [BINARY_OP_ADD_UNICODE] = */BINARY_OP,
    /* [BINARY_OP_INPLACE_ADD_UNICODE] = */BINARY_OP,
    /* [BINARY_OP_MULTIPLY_FLOAT] = */BINARY_OP,
    /* [BINARY_OP_MULTIPLY_INT] = */BINARY_OP,
    /* [BINARY_OP_SUBTRACT_FLOAT] = */BINARY_OP,
    /* [BINARY_OP_SUBTRACT_INT] = */BINARY_OP,
    /* [BINARY_SLICE] = */BINARY_SLICE,
    /* [BINARY_SUBSCR] = */BINARY_SUBSCR,
    /* [BINARY_SUBSCR_DICT] = */BINARY_SUBSCR,
    /* [BINARY_SUBSCR_GETITEM] = */BINARY_SUBSCR,
    /* [BINARY_SUBSCR_LIST_INT] = */BINARY_SUBSCR,
    /* [BINARY_SUBSCR_STR_INT] = */BINARY_SUBSCR,
    /* [BINARY_SUBSCR_TUPLE_INT] = */BINARY_SUBSCR,
    /* [BUILD_CONST_KEY_MAP] = */BUILD_CONST_KEY_MAP,
    /* [BUILD_LIST] = */BUILD_LIST,
    /* [BUILD_MAP] = */BUILD_MAP,
    /* [BUILD_SET] = */BUILD_SET,
    /* [BUILD_SLICE] = */BUILD_SLICE,
    /* [BUILD_STRING] = */BUILD_STRING,
    /* [BUILD_TUPLE] = */BUILD_TUPLE,
    /* [CACHE] = */CACHE,
    /* [CALL] = */CALL,
    /* [CALL_ALLOC_AND_ENTER_INIT] = */CALL,
    /* [CALL_BOUND_METHOD_EXACT_ARGS] = */CALL,
    /* [CALL_BOUND_METHOD_GENERAL] = */CALL,
    /* [CALL_BUILTIN_CLASS] = */CALL,
    /* [CALL_BUILTIN_FAST] = */CALL,
    /* [CALL_BUILTIN_FAST_WITH_KEYWORDS] = */CALL,
    /* [CALL_BUILTIN_O] = */CALL,
    /* [CALL_FUNCTION_EX] = */CALL_FUNCTION_EX,
    /* [CALL_INTRINSIC_1] = */CALL_INTRINSIC_1,
    /* [CALL_INTRINSIC_2] = */CALL_INTRINSIC_2,
    /* [CALL_ISINSTANCE] = */CALL,
    /* [CALL_KW] = */CALL_KW,
    /* [CALL_LEN] = */CALL,
    /* [CALL_LIST_APPEND] = */CALL,
    /* [CALL_METHOD_DESCRIPTOR_FAST] = */CALL,
    /* [CALL_METHOD_DESCRIPTOR_FAST_WITH_KEYWORDS] = */CALL,
    /* [CALL_METHOD_DESCRIPTOR_NOARGS] = */CALL,
    /* [CALL_METHOD_DESCRIPTOR_O] = */CALL,
    /* [CALL_NON_PY_GENERAL] = */CALL,
    /* [CALL_PY_EXACT_ARGS] = */CALL,
    /* [CALL_PY_GENERAL] = */CALL,
    /* [CALL_STR_1] = */CALL,
    /* [CALL_TUPLE_1] = */CALL,
    /* [CALL_TYPE_1] = */CALL,
    /* [CHECK_EG_MATCH] = */CHECK_EG_MATCH,
    /* [CHECK_EXC_MATCH] = */CHECK_EXC_MATCH,
    /* [CLEANUP_THROW] = */CLEANUP_THROW,
    /* [COMPARE_OP] = */COMPARE_OP,
    /* [COMPARE_OP_FLOAT] = */COMPARE_OP,
    /* [COMPARE_OP_INT] = */COMPARE_OP,
    /* [COMPARE_OP_STR] = */COMPARE_OP,
    /* [CONTAINS_OP] = */CONTAINS_OP,
    /* [CONTAINS_OP_DICT] = */CONTAINS_OP,
    /* [CONTAINS_OP_SET] = */CONTAINS_OP,
    /* [CONVERT_VALUE] = */CONVERT_VALUE,
    /* [COPY] = */COPY,
    /* [COPY_FREE_VARS] = */COPY_FREE_VARS,
    /* [DELETE_ATTR] = */DELETE_ATTR,
    /* [DELETE_DEREF] = */DELETE_DEREF,
    /* [DELETE_FAST] = */DELETE_FAST,
    /* [DELETE_GLOBAL] = */DELETE_GLOBAL,
    /* [DELETE_NAME] = */DELETE_NAME,
    /* [DELETE_SUBSCR] = */DELETE_SUBSCR,
    /* [DICT_MERGE] = */DICT_MERGE,
    /* [DICT_UPDATE] = */DICT_UPDATE,
    /* [END_ASYNC_FOR] = */END_ASYNC_FOR,
    /* [END_FOR] = */END_FOR,
    /* [END_SEND] = */END_SEND,
    /* [ENTER_EXECUTOR] = */ENTER_EXECUTOR,
    /* [EXIT_INIT_CHECK] = */EXIT_INIT_CHECK,
    /* [EXTENDED_ARG] = */EXTENDED_ARG,
    /* [FORMAT_SIMPLE] = */FORMAT_SIMPLE,
    /* [FORMAT_WITH_SPEC] = */FORMAT_WITH_SPEC,
    /* [FOR_ITER] = */FOR_ITER,
    /* [FOR_ITER_GEN] = */FOR_ITER,
    /* [FOR_ITER_LIST] = */FOR_ITER,
    /* [FOR_ITER_RANGE] = */FOR_ITER,
    /* [FOR_ITER_TUPLE] = */FOR_ITER,
    /* [GET_AITER] = */GET_AITER,
    /* [GET_ANEXT] = */GET_ANEXT,
    /* [GET_AWAITABLE] = */GET_AWAITABLE,
    /* [GET_ITER] = */GET_ITER,
    /* [GET_LEN] = */GET_LEN,
    /* [GET_YIELD_FROM_ITER] = */GET_YIELD_FROM_ITER,
    /* [IMPORT_FROM] = */IMPORT_FROM,
    /* [IMPORT_NAME] = */IMPORT_NAME,
    /* [INSTRUMENTED_CALL] = */INSTRUMENTED_CALL,
    /* [INSTRUMENTED_CALL_FUNCTION_EX] = */INSTRUMENTED_CALL_FUNCTION_EX,
    /* [INSTRUMENTED_CALL_KW] = */INSTRUMENTED_CALL_KW,
    /* [INSTRUMENTED_END_FOR] = */INSTRUMENTED_END_FOR,
    /* [INSTRUMENTED_END_SEND] = */INSTRUMENTED_END_SEND,
    /* [INSTRUMENTED_FOR_ITER] = */INSTRUMENTED_FOR_ITER,
    /* [INSTRUMENTED_INSTRUCTION] = */INSTRUMENTED_INSTRUCTION,
    /* [INSTRUMENTED_JUMP_BACKWARD] = */INSTRUMENTED_JUMP_BACKWARD,
    /* [INSTRUMENTED_JUMP_FORWARD] = */INSTRUMENTED_JUMP_FORWARD,
    /* [INSTRUMENTED_LINE] = */INSTRUMENTED_LINE,
    /* [INSTRUMENTED_LOAD_SUPER_ATTR] = */INSTRUMENTED_LOAD_SUPER_ATTR,
    /* [INSTRUMENTED_POP_JUMP_IF_FALSE] = */INSTRUMENTED_POP_JUMP_IF_FALSE,
    /* [INSTRUMENTED_POP_JUMP_IF_NONE] = */INSTRUMENTED_POP_JUMP_IF_NONE,
    /* [INSTRUMENTED_POP_JUMP_IF_NOT_NONE] = */INSTRUMENTED_POP_JUMP_IF_NOT_NONE,
    /* [INSTRUMENTED_POP_JUMP_IF_TRUE] = */INSTRUMENTED_POP_JUMP_IF_TRUE,
    /* [INSTRUMENTED_RESUME] = */INSTRUMENTED_RESUME,
    /* [INSTRUMENTED_RETURN_CONST] = */INSTRUMENTED_RETURN_CONST,
    /* [INSTRUMENTED_RETURN_VALUE] = */INSTRUMENTED_RETURN_VALUE,
    /* [INSTRUMENTED_YIELD_VALUE] = */INSTRUMENTED_YIELD_VALUE,
    /* [INTERPRETER_EXIT] = */INTERPRETER_EXIT,
    /* [IS_OP] = */IS_OP,
    /* [JUMP_BACKWARD] = */JUMP_BACKWARD,
    /* [JUMP_BACKWARD_NO_INTERRUPT] = */JUMP_BACKWARD_NO_INTERRUPT,
    /* [JUMP_FORWARD] = */JUMP_FORWARD,
    /* [LIST_APPEND] = */LIST_APPEND,
    /* [LIST_EXTEND] = */LIST_EXTEND,
    /* [LOAD_ASSERTION_ERROR] = */LOAD_ASSERTION_ERROR,
    /* [LOAD_ATTR] = */LOAD_ATTR,
    /* [LOAD_ATTR_CLASS] = */LOAD_ATTR,
    /* [LOAD_ATTR_GETATTRIBUTE_OVERRIDDEN] = */LOAD_ATTR,
    /* [LOAD_ATTR_INSTANCE_VALUE] = */LOAD_ATTR,
    /* [LOAD_ATTR_METHOD_LAZY_DICT] = */LOAD_ATTR,
    /* [LOAD_ATTR_METHOD_NO_DICT] = */LOAD_ATTR,
    /* [LOAD_ATTR_METHOD_WITH_VALUES] = */LOAD_ATTR,
    /* [LOAD_ATTR_MODULE] = */LOAD_ATTR,
    /* [LOAD_ATTR_NONDESCRIPTOR_NO_DICT] = */LOAD_ATTR,
    /* [LOAD_ATTR_NONDESCRIPTOR_WITH_VALUES] = */LOAD_ATTR,
    /* [LOAD_ATTR_PROPERTY] = */LOAD_ATTR,
    /* [LOAD_ATTR_SLOT] = */LOAD_ATTR,
    /* [LOAD_ATTR_WITH_HINT] = */LOAD_ATTR,
    /* [LOAD_BUILD_CLASS] = */LOAD_BUILD_CLASS,
    /* [LOAD_CONST] = */LOAD_CONST,
    /* [LOAD_DEREF] = */LOAD_DEREF,
    /* [LOAD_FAST] = */LOAD_FAST,
    /* [LOAD_FAST_AND_CLEAR] = */LOAD_FAST_AND_CLEAR,
    /* [LOAD_FAST_CHECK] = */LOAD_FAST_CHECK,
    /* [LOAD_FAST_LOAD_FAST] = */LOAD_FAST_LOAD_FAST,
    /* [LOAD_FROM_DICT_OR_DEREF] = */LOAD_FROM_DICT_OR_DEREF,
    /* [LOAD_FROM_DICT_OR_GLOBALS] = */LOAD_FROM_DICT_OR_GLOBALS,
    /* [LOAD_GLOBAL] = */LOAD_GLOBAL,
    /* [LOAD_GLOBAL_BUILTIN] = */LOAD_GLOBAL,
    /* [LOAD_GLOBAL_MODULE] = */LOAD_GLOBAL,
    /* [LOAD_LOCALS] = */LOAD_LOCALS,
    /* [LOAD_NAME] = */LOAD_NAME,
    /* [LOAD_SUPER_ATTR] = */LOAD_SUPER_ATTR,
    /* [LOAD_SUPER_ATTR_ATTR] = */LOAD_SUPER_ATTR,
    /* [LOAD_SUPER_ATTR_METHOD] = */LOAD_SUPER_ATTR,
    /* [MAKE_CELL] = */MAKE_CELL,
    /* [MAKE_FUNCTION] = */MAKE_FUNCTION,
    /* [MAP_ADD] = */MAP_ADD,
    /* [MATCH_CLASS] = */MATCH_CLASS,
    /* [MATCH_KEYS] = */MATCH_KEYS,
    /* [MATCH_MAPPING] = */MATCH_MAPPING,
    /* [MATCH_SEQUENCE] = */MATCH_SEQUENCE,
    /* [NOP] = */NOP,
    /* [POP_EXCEPT] = */POP_EXCEPT,
    /* [POP_JUMP_IF_FALSE] = */POP_JUMPIF_FALSE,
    /* [POP_JUMP_IF_NONE] = */POP_JUMPIF_NONE,
    /* [POP_JUMP_IF_NOT_NONE] = */POP_JUMPIF_NOTNONE,
    /* [POP_JUMP_IF_TRUE] = */POP_JUMPIF_TRUE,
    /* [POP_TOP] = */POP_TOP,
    /* [PUSH_EXC_INFO] = */PUSH_EXC_INFO,
    /* [PUSH_NULL] = */PUSH_NULL,
    /* [RAISE_VARARGS] = */RAISE_VARARGS,
    /* [RERAISE] = */RERAISE,
    /* [RESERVED] = */RESERVED,
    /* [RESUME] = */RESUME,
    /* [RESUME_CHECK] = */RESUME,
    /* [RETURN_CONST] = */RETURN_CONST,
    /* [RETURN_GENERATOR] = */RETURN_GENERATOR,
    /* [RETURN_VALUE] = */RETURN_VALUE,
    /* [SEND] = */SEND,
    /* [SEND_GEN] = */SEND,
    /* [SETUP_ANNOTATIONS] = */SETUP_ANNOTATIONS,
    /* [SET_ADD] = */SET_ADD,
    /* [SET_FUNCTION_ATTRIBUTE] = */SET_FUNCTION_ATTRIBUTE,
    /* [SET_UPDATE] = */SET_UPDATE,
    /* [STORE_ATTR] = */STORE_ATTR,
    /* [STORE_ATTR_INSTANCE_VALUE] = */STORE_ATTR,
    /* [STORE_ATTR_SLOT] = */STORE_ATTR,
    /* [STORE_ATTR_WITH_HINT] = */STORE_ATTR,
    /* [STORE_DEREF] = */STORE_DEREF,
    /* [STORE_FAST] = */STORE_FAST,
    /* [STORE_FAST_LOAD_FAST] = */STORE_FAST_LOAD_FAST,
    /* [STORE_FAST_STORE_FAST] = */STORE_FAST_STORE_FAST,
    /* [STORE_GLOBAL] = */STORE_GLOBAL,
    /* [STORE_NAME] = */STORE_NAME,
    /* [STORE_SLICE] = */STORE_SLICE,
    /* [STORE_SUBSCR] = */STORE_SUBSCR,
    /* [STORE_SUBSCR_DICT] = */STORE_SUBSCR,
    /* [STORE_SUBSCR_LIST_INT] = */STORE_SUBSCR,
    /* [SWAP] = */SWAP,
    /* [TO_BOOL] = */TO_BOOL,
    /* [TO_BOOL_ALWAYS_TRUE] = */TO_BOOL,
    /* [TO_BOOL_BOOL] = */TO_BOOL,
    /* [TO_BOOL_INT] = */TO_BOOL,
    /* [TO_BOOL_LIST] = */TO_BOOL,
    /* [TO_BOOL_NONE] = */TO_BOOL,
    /* [TO_BOOL_STR] = */TO_BOOL,
    /* [UNARY_INVERT] = */UNARY_INVERT,
    /* [UNARY_NEGATIVE] = */UNARY_NEGATIVE,
    /* [UNARY_NOT] = */UNARY_NOT,
    /* [UNPACK_EX] = */UNPACK_EX,
    /* [UNPACK_SEQUENCE] = */UNPACK_SEQUENCE,
    /* [UNPACK_SEQUENCE_LIST] = */UNPACK_SEQUENCE,
    /* [UNPACK_SEQUENCE_TUPLE] = */UNPACK_SEQUENCE,
    /* [UNPACK_SEQUENCE_TWO_TUPLE] = */UNPACK_SEQUENCE,
    /* [WITH_EXCEPT_START] = */WITH_EXCEPT_START,
    /* [YIELD_VALUE] = */YIELD_VALUE,
};

#endif // NEED_OPCODE_METADATA
